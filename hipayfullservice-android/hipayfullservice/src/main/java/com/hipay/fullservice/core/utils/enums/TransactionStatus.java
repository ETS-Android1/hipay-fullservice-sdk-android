package com.hipay.fullservice.core.utils.enums;


/**
 * Created by nfillion on 26/03/2018.
 */
public enum TransactionStatus {

    TRANSACTION_STATUS_UNKNOWN(0),
    TRANSACTION_STATUS_CREATED(101),
    TRANSACTION_STATUS_CARDHOLDER_ENROLLED(103),
    TRANSACTION_STATUS_CARDHOLDER_NOT_ENROLLED(104),
    TRANSACTION_STATUS_UNABLE_TO_AUTHENTICATE(105),
    TRANSACTION_STATUS_CARDHOLDER_AUTHENTICATED(106),
    TRANSACTION_STATUS_AUTHENTICATION_ATTEMPTED(107),
    TRANSACTION_STATUS_COULD_NOT_AUTHENTICATE(108),
    TRANSACTION_STATUS_AUTHENTICATION_FAILED(109),
    TRANSACTION_STATUS_BLOCKED(110),
    TRANSACTION_STATUS_DENIED(111),
    TRANSACTION_STATUS_AUTHORIZED_AND_PENDING(112),
    TRANSACTION_STATUS_REFUSED(113),
    TRANSACTION_STATUS_EXPIRED(114),
    TRANSACTION_STATUS_CANCELLED(115),
    TRANSACTION_STATUS_AUTHORIZED(116),
    TRANSACTION_STATUS_CAPTURE_REQUESTED(117),
    TRANSACTION_STATUS_CAPTURED(118),
    TRANSACTION_STATUS_PARTIALLY_CAPTURED(119),
    TRANSACTION_STATUS_COLLECTED(120),
    TRANSACTION_STATUS_PARTIALLY_COLLECTED(121),
    TRANSACTION_STATUS_SETTLED(122),
    TRANSACTION_STATUS_PARTIALLY_SETTLED(123),
    TRANSACTION_STATUS_REFUND_REQUESTED(124),
    TRANSACTION_STATUS_REFUNDED(125),
    TRANSACTION_STATUS_PARTIALLY_REFUNDED(126),
    TRANSACTION_STATUS_CHARGED_BACK(129),
    TRANSACTION_STATUS_DEBITED(131),
    TRANSACTION_STATUS_PARTIALLY_DEBITED(132),
    TRANSACTION_STATUS_AUTHENTICATION_REQUESTED(140),
    TRANSACTION_STATUS_AUTHENTICATED(141),
    TRANSACTION_STATUS_AUTHORIZATION_REQUESTED(142),
    TRANSACTION_STATUS_ACQUIRER_FOUND(150),
    TRANSACTION_STATUS_ACQUIRERNOT_FOUND(151),
    TRANSACTION_STATUS_CARDHOLDER_ENROLLMENT_UNKNOWN(160),
    TRANSACTION_STATUS_RISK_ACCEPTED(161),
    TRANSACTION_STATUS_AUTHORIZATION_REFUSED(163),
    TRANSACTION_STATUS_CAPTURE_REFUSED(173),
    TRANSACTION_STATUS_PENDING_PAYMENT(200);

    protected final int status;

    TransactionStatus(int status) {
        this.status = status;
    }

    public Integer getValue() {
        return this.status;
    }

    public static TransactionStatus fromIntegerValue(Integer value) {
        if (value != null) {
            for (TransactionStatus state : TransactionStatus.values()) {
                if (state.getValue() == value) {
                    return state;
                }
            }
        }
        return null;
    }
}
